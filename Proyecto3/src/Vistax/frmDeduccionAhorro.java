package Vistax;
import Controller.ControlUniversal;
import Controller.VerificacionDeCredito;
import Modelos.Ahorro;
import Modelos.Carga;
import Modelos.Cuota;
import Modelos.Empresa;
import Modelos.FormaPago;
import Modelos.Socio;
import Utilerias.interfacex;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.net.URISyntaxException;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.StringTokenizer;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author root4142
 */
public class frmDeduccionAhorro extends javax.swing.JInternalFrame {
    private interfacex inter=new interfacex();
    private Vector<JTextField> txtCampos=new Vector<>();
    private Vector<Ahorro> Ahorro=new Vector<>();
    private Date date;
    private boolean ins=true,b=false,c=false;
    private ControlUniversal control;
    private Ahorro ahorro;
    private Carga carga;
    /**
     * Creates new form frmDeduccionAhorro
     */
    public frmDeduccionAhorro(ControlUniversal cont) {
        initComponents();
        control=cont;
        txtCampos.add(txtCargaID);
        txtCampos.add(txtEmpresaID);
        txtCampos.add(txtRuta);
        date=new Date();
        date=control.getFechaSistemaSql();
        cboFecha.setDate(date);
        int auto = control.autoUniversal2("Carga","CargaID");
        txtCargaID.setText(String.valueOf(auto));
        cboFecha.grabFocus();
    }
    private void Limpiar_Campos(){
        date=new Date();
        date=control.getFechaSistemaSql();
        cboFecha.setDate(date);
        for (JTextField o : txtCampos) {
            o.setText("");
        }
        lblNombreEmpresa.setText("");
        ins=true;
        b=false;c=false;
        int auto = control.autoUniversal("Carga");
        txtCargaID.setText(String.valueOf(auto));
        cboFecha.grabFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtRuta = new javax.swing.JTextField();
        cboFecha = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtEmpresaID = new javax.swing.JTextField();
        lblNombreEmpresa = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCargaID = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setTitle("Formulario de Generacion de deduccion de Ahorro de Socios.");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Vistax/Iconos/icon.jpeg"))); // NOI18N
        setName("frmDeduccionAhorro"); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("No. de Carga :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLabel2.setBackground(java.awt.Color.white);
        jLabel2.setText("Deduccion Planilla");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 111, 160, 30));

        txtRuta.setEnabled(false);
        txtRuta.setName("Ruta"); // NOI18N
        txtRuta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRutaKeyTyped(evt);
            }
        });
        getContentPane().add(txtRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 290, -1));

        cboFecha.setDateFormatString("MMMMM d, yyyy");
        getContentPane().add(cboFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 260, -1));

        jLabel3.setText("Fecha :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        jLabel4.setText("Tipo de Aportacion :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        txtEmpresaID.setBackground(java.awt.Color.white);
        txtEmpresaID.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtEmpresaID.setName("EmpresaID"); // NOI18N
        txtEmpresaID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpresaIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtEmpresaID, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 90, -1));

        lblNombreEmpresa.setBackground(java.awt.Color.white);
        lblNombreEmpresa.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblNombreEmpresa.setOpaque(true);
        getContentPane().add(lblNombreEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, 250, 30));

        jLabel5.setText("Codigo de la Empresa :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel6.setText("Ruta de Archivo TXT :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        txtCargaID.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCargaID.setEnabled(false);
        txtCargaID.setName("txtCargaID"); // NOI18N
        getContentPane().add(txtCargaID, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 160, -1));

        jButton1.setText("Crear Archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 180, -1));

        jButton2.setText("Procesar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 120, -1));

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 310, 120, -1));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-631)/2, (screenSize.height-399)/2, 631, 399);
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmpresaIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpresaIDActionPerformed
        Empresa empresa = new Empresa();
        Object o[][] = control.seekUniversal(empresa.getVectorData(), "Empresa",txtEmpresaID.getText());
        if (o != null) {
            empresa = new Empresa(o);
            lblNombreEmpresa.setText(empresa.getNombre());
            b=true;
            txtRuta.grabFocus();
        }
    }//GEN-LAST:event_txtEmpresaIDActionPerformed

    private void txtRutaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRutaKeyTyped
        if(txtRuta.getText().length()>=200){
            evt.consume();
        }
    }//GEN-LAST:event_txtRutaKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Solo Archivos *.TXT", "txt");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Seleccione un Archivo *.TXT");
        chooser.setApproveButtonText("Seleccionar y Guardar");
        chooser.setMultiSelectionEnabled(false);
//        try {
//            chooser.setCurrentDirectory(new File(getClass().getResource("/Vistax/Files/").toURI()));
//        } catch (URISyntaxException ex) {
//            Logger.getLogger(frmDeduccionAhorro.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        getClass().getResource("/Vistax/Files/").toURI();
//         getClass().getProtectionDomain().getCodeSource().getLocation().toURI();
        int returnVal = chooser.showSaveDialog(rootPane);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String ruta = chooser.getSelectedFile().getAbsolutePath();                          
            String r="";
            if(ruta.indexOf(".")!=-1){
                r=ruta.substring(0, ruta.indexOf("."));
            }
            else{
                r=ruta;
            }
            ruta = r + ".txt";
            txtRuta.setText(ruta);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int x=JOptionPane.showConfirmDialog(rootPane,"¿Esta seguro de Generar Ahorro Atomatico para este mes?","Mensaje",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(x==JOptionPane.YES_OPTION){
            c=false;
            for (JTextField o : txtCampos) {
                if (o.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Campo " + o.getName() + " se encuentra Vacio", "Error", JOptionPane.ERROR_MESSAGE);
                    o.grabFocus();
                    c = false;
                    break;
                } else {
                    c = true;
                }
            }
            if(c){
                if(!b){
                    JOptionPane.showMessageDialog(rootPane,"Campo Codigo de Empresa no esta validado","Mensaje",JOptionPane.INFORMATION_MESSAGE);
                    txtEmpresaID.grabFocus();
                }
                else{
                    Date d=cboFecha.getDate();
                    String fecha=inter.Date_String(d);
                    carga=new Carga(inter.String_Int(txtCargaID.getText()),fecha,inter.String_Int(txtEmpresaID.getText()),txtRuta.getText(),"P");
                    
                    Socio socio=new Socio();
                    Vector<Object[][]> kk = control.seekUniversalVector2(socio.getVectorData(), "Socio","EmpresaID="+carga.getEmpresaID());
                    if (!kk.isEmpty()) {
                        Ahorro.clear();
                        int cod=control.autoUniversal2("Ahorro","Item");
                        for (Object ll[][] : kk) {
                            Socio socio1 = new Socio(ll);
                            //como es deduccion quincenal el valor de sueldo se divide entre 2
                            float val=(socio1.getSueldo()/2)*socio1.getAhorro();
                            ahorro=new Ahorro(socio1.getSocioID(), cod, fecha, "D", val,carga.getCargaID());
                            Ahorro.add(ahorro);
                            cod++;
                        }
                    }
                    

                    FileWriter fichero = null;
                    PrintWriter pw = null;
                    try {
                        fichero = new FileWriter(txtRuta.getText());
                        pw = new PrintWriter(fichero);

                        boolean xz = true, yz = true;
                        if (!Ahorro.isEmpty()) {
                            yz = control.insUniversal2(carga.getVectorData(), "Carga");
                            String encabezado="\n \nArchivo de carga No. :"+carga.getCargaID()+"\nFecha : "+cboFecha.getDate().toString().toUpperCase()+"\nEmpresa : "+lblNombreEmpresa.getText().toUpperCase()+"\nTipo de Ahorro : "+jLabel2.getText().toUpperCase()+"\n ";
                            StringTokenizer st = new StringTokenizer(encabezado,"\n");
                            while (st.hasMoreTokens()) {
                                String line = st.nextToken();
                                pw.println(line);
                            }
                            float total_pagar=0;
                            for (Ahorro o : Ahorro) {
                                xz = control.insUniversal2(o.getVectorData(), "Ahorro");
                                if (!xz) {
                                    break;
                                }else{
                                    Socio socio2=new Socio();
                                    Object ok[][] = control.seekUniversal(socio2.getVectorData(), "Socio", o.getSocioID()+"");
                                    if (ok != null) {
                                        socio2 = new Socio(ok);
                                        String line ="Codigo : "+ socio2.getCodigo()+" Nombre : "+socio2.getNombre()+" Ahorro : "+o.getValor();
                                        
                                        VerificacionDeCredito verifica = new VerificacionDeCredito(socio2.getSocioID(),control);
                                        if (verifica.getTipoCredito() == 1) {
                                            line=line+" Deduccion de Anticipo("+verifica.getAnticipo().getAnticipoID()+") : "+verifica.getAnticipo().getValor();
                                            total_pagar+=verifica.getAnticipo().getValor();
                                        }
                                        else if (verifica.getTipoCredito() == 2) {
                                            for (Cuota okk : verifica.getCuotas()) {
                                                if(okk.getEstado().equals("P")){
                                                    Calendar hoy = new GregorianCalendar();
                                                    hoy.setTime(control.getFechaSistemaSql());
                                                    Calendar c4 = new GregorianCalendar();
                                                    c4.setTime(inter.String_Date(okk.getFechaVence()));
                                                    if (c4.before(hoy)) {
                                                        float tem=okk.getCapital()+okk.getInteres();
                                                        line=line+" Deduccion de Prestamo("+verifica.getPrestamo().getPrestamoID()+")/Cuota("+okk.getCuotaID()+")(capital+intereses) : "+tem+ " Fecha de Vencimiento : "+okk.getFechaVence();
                                                        total_pagar+=tem;
                                                    }
                                                }
                                            }
                                        } else if (verifica.getTipoCredito() == 3) {
                                            FormaPago formapago=new FormaPago();
                                            Object oz[][] = control.seekUniversal(formapago.getVectorData(), "FormaPago",verifica.getFactura().getTiendaID()+" and FacturaID="+verifica.getFactura().getFacturaID());
                                            if (oz != null) {
                                                formapago = new FormaPago(oz);
                                                line=line+" Deduccion de Factura al credito("+verifica.getFactura().getFacturaID()+") : "+formapago.getValor();
                                                total_pagar+=formapago.getValor();
                                            }
                                        }
                                        pw.println(line);
                                        total_pagar+=o.getValor();
                                    }
                                }
                            }
                            pw.println("------------------Ultima Linea Detalle---------------");
                            pw.println(" ");
                            pw.println(" Total a Pagar : "+total_pagar);
                            pw.println("----------------------Ultima Linea-------------------");
                            if ((yz) && (xz)) {
                                JOptionPane.showMessageDialog(rootPane, "OPERACION EFECTUADA CON EXITO");
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "ERROR FAVOR CONSULTAR A SU DBA MANAGER");
                            }
                            Limpiar_Campos();
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "No se encontraron Socios para esa empresa", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        }

                    } catch (Exception e) {
                        e.printStackTrace();
                    } finally {
                        try {
                            // Nuevamente aprovechamos el finally para 
                            // asegurarnos que se cierra el fichero.
                            if (null != fichero) {
                                fichero.close();
                            }
                        } catch (Exception e2) {
                            e2.printStackTrace();
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser cboFecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblNombreEmpresa;
    private javax.swing.JTextField txtCargaID;
    private javax.swing.JTextField txtEmpresaID;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables
}
