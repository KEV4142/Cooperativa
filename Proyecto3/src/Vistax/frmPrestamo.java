package Vistax;
import Controller.ControlUniversal;
import Controller.VerificacionDeCredito;
import Modelos.Ahorro;
import Modelos.Banco;
import Modelos.Carga;
import Modelos.Cheque;
import Modelos.Cooperativa;
import Modelos.Cuenta;
import Modelos.Cuota;
import Modelos.Prestamo;
import Modelos.Socio;
import Utilerias.interfacex;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JLabel;
import javax.swing.JTextField;
/**
 *
 * @author root4142
 */
public class frmPrestamo extends javax.swing.JInternalFrame {
    private interfacex inter=new interfacex();
    private Vector<JTextField> txtCampos=new Vector<>();
    private Vector<JLabel> lblLabels=new Vector<>();
    private Date date,date2;
    private Calendar c1 = new GregorianCalendar();
    private float limite=0;
    private boolean ins=true,b=false,c=false;
    private ControlUniversal control;
    private Prestamo prestamo;
    private Cheque cheque;
    
    public frmPrestamo(ControlUniversal cont) {
        initComponents();
        control=cont;
        txtCampos.add(txtPrestamoID);
        txtCampos.add(txtSocioID);
        txtCampos.add(txtValor);
        txtCampos.add(txtChequeID);
        lblLabels.add(lblNombreSocio);
        lblLabels.add(lblNombreBeneficiario);
        lblLabels.add(lblValor);
        lblLabels.add(lblBancoNombre);
        lblLabels.add(lblCuentaID);
        lblLabels.add(lblCuentaNombre);
        prestamo=new Prestamo();
        date=new Date();
        date=control.getFechaSistemaSql();
        cboFecha.setDate(date);
        int auto = control.autoUniversal2("Prestamo","PrestamoID");
        txtPrestamoID.setText(String.valueOf(auto));
        txtSocioID.grabFocus();
    }
    
    private void Limpiar_Campos(){
        date=new Date();
        date=control.getFechaSistemaSql();
        cboFecha.setDate(date);
        for (JTextField o : txtCampos) {
            o.setText("");
        }
        for (JLabel o : lblLabels) {
            o.setText("");
        }
        ins=true;
        rd1.setSelected(true);
        b=false;c=false;
        int auto = control.autoUniversal2("Prestamo","PrestamoID");
        txtPrestamoID.setText(String.valueOf(auto));
        txtSocioID.grabFocus();
    }
    private void Calcular_Limite(Socio socio){
        float temp=0;
        Ahorro ahorro=new Ahorro();
        Vector<Object[][]> kk = control.seekUniversalVector2(ahorro.getVectorData(), "Ahorro","SocioID="+socio.getSocioID());
        if (!kk.isEmpty()) {
            for (Object ll[][] : kk) {
                ahorro = new Ahorro(ll);
                boolean zz=control.seekUniversal("SELECT * FROM Agricola.Carga where CargaID="+ahorro.getCargaID()+" and Estado='D';");
                if(zz){
                    temp=temp+ahorro.getValor();
                }
            }
        }
        if(socio.getSueldo()>temp){
            limite=socio.getSueldo();
        }else{
            limite=temp;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtPrestamoID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSocioID = new javax.swing.JTextField();
        lblNombreSocio = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        cboFecha = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtChequeID = new javax.swing.JTextField();
        lblNombreBeneficiario = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblCuentaID = new javax.swing.JLabel();
        lblCuentaNombre = new javax.swing.JLabel();
        lblBancoNombre = new javax.swing.JLabel();
        lblValor = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        rd1 = new javax.swing.JRadioButton();
        rd2 = new javax.swing.JRadioButton();

        setTitle("Formulario de Prestamo para los Socios.");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Vistax/Iconos/icon.jpeg"))); // NOI18N
        setName("frmPrestamo"); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("No. Prestamo :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        txtPrestamoID.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPrestamoID.setEnabled(false);
        txtPrestamoID.setName("PrestamoID"); // NOI18N
        getContentPane().add(txtPrestamoID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 130, -1));

        jLabel2.setText("Fecha :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, -1, -1));

        txtSocioID.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtSocioID.setName("SocioID"); // NOI18N
        txtSocioID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSocioIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtSocioID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 100, -1));

        lblNombreSocio.setBackground(java.awt.Color.white);
        lblNombreSocio.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblNombreSocio.setOpaque(true);
        getContentPane().add(lblNombreSocio, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 260, 30));

        jLabel3.setText("ID Socio :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        txtValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValor.setName("Valor"); // NOI18N
        getContentPane().add(txtValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 130, -1));

        cboFecha.setDateFormatString("MMMMM d, yyyy");
        cboFecha.setEnabled(false);
        getContentPane().add(cboFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 220, -1));

        jLabel6.setText("No. de Cheque :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        txtChequeID.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtChequeID.setName("ChequeID"); // NOI18N
        txtChequeID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChequeIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtChequeID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 90, -1));

        lblNombreBeneficiario.setBackground(java.awt.Color.white);
        lblNombreBeneficiario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreBeneficiario.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblNombreBeneficiario.setName("Beneficiario"); // NOI18N
        lblNombreBeneficiario.setOpaque(true);
        getContentPane().add(lblNombreBeneficiario, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 270, 30));

        jLabel7.setText("Cuenta :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, -1, -1));

        jLabel12.setText("Nombre del Banco :");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        lblCuentaID.setBackground(java.awt.Color.white);
        lblCuentaID.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblCuentaID.setName("Banco"); // NOI18N
        lblCuentaID.setOpaque(true);
        getContentPane().add(lblCuentaID, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 220, 30));

        lblCuentaNombre.setBackground(java.awt.Color.white);
        lblCuentaNombre.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblCuentaNombre.setName("Cuenta"); // NOI18N
        lblCuentaNombre.setOpaque(true);
        getContentPane().add(lblCuentaNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, 230, 30));

        lblBancoNombre.setBackground(java.awt.Color.white);
        lblBancoNombre.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblBancoNombre.setName("Banco"); // NOI18N
        lblBancoNombre.setOpaque(true);
        getContentPane().add(lblBancoNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 240, 250, 30));

        lblValor.setBackground(java.awt.Color.white);
        lblValor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblValor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblValor.setName("Valor"); // NOI18N
        lblValor.setOpaque(true);
        getContentPane().add(lblValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 200, 130, 30));

        jLabel9.setText("Valor :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 350, 80, -1));

        jButton3.setText("Guardar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 350, 100, -1));

        jLabel4.setText("Tipo de Cuota");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, -1, -1));

        buttonGroup1.add(rd1);
        rd1.setSelected(true);
        rd1.setText("Cuota Nivelada");
        getContentPane().add(rd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, -1, -1));

        buttonGroup1.add(rd2);
        rd2.setText("Saldos Insolutos");
        getContentPane().add(rd2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, -1, -1));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-673)/2, (screenSize.height-441)/2, 673, 441);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSocioIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSocioIDActionPerformed
        Socio socio = new Socio();
        Object o[][] = control.seekUniversal(socio.getVectorData(), "Socio", txtSocioID.getText());
        if (o != null) {
            socio=new Socio(o);
            VerificacionDeCredito verifica=new VerificacionDeCredito(socio.getSocioID(),control);
            if(verifica.getTipoCredito()==2){
                JOptionPane.showMessageDialog(rootPane,"Ya hay un Prestamo Vigente no Cancelado por parte de este Socio","Error",JOptionPane.ERROR_MESSAGE);
                txtSocioID.grabFocus();
            }
            else if (verifica.getTipoCredito() == 1) {
                JOptionPane.showMessageDialog(rootPane, "Ya hay un Anticipo Vigente no Cancelado por parte de este Socio", "Error", JOptionPane.ERROR_MESSAGE);
                txtSocioID.grabFocus();
            }
            else if (verifica.getTipoCredito() == 3) {
                JOptionPane.showMessageDialog(rootPane, "Ya hay una Factura Vigente no Cancelado por parte de este Socio", "Error", JOptionPane.ERROR_MESSAGE);
                txtSocioID.grabFocus();
            }
            else{
                lblNombreSocio.setText(socio.getNombre());
                Calcular_Limite(socio);
                date2 = inter.String_Date(socio.getFechaIngreso());
                c1 = new GregorianCalendar();
                c1.setTime(date2);
                c1.add(Calendar.DAY_OF_MONTH, 30);
                b = true;
                txtValor.grabFocus();
            }
        }
    }//GEN-LAST:event_txtSocioIDActionPerformed

    private void txtChequeIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChequeIDActionPerformed
        cheque = new Cheque();
        Object o[][] = control.seekUniversal(cheque.getVectorData(), "Cheque", txtChequeID.getText());
        if (o != null) {
            cheque=new Cheque(o);
            if(cheque.getEstado().equals("P") || cheque.getEstado().equals("A")){
                JOptionPane.showMessageDialog(rootPane,"Cheque ya esta Pagado o Anulado","Mensaje",JOptionPane.ERROR_MESSAGE);
                txtChequeID.grabFocus();
            } else {
                lblNombreBeneficiario.setText(cheque.getBeneficiario());
                lblValor.setText(cheque.getValor() + "");
                Banco banco = new Banco();
                Object oo[][] = control.seekUniversal(banco.getVectorData(), "Banco", cheque.getBancoID() + "");
                if (oo != null) {
                    banco = new Banco(oo);
                    lblBancoNombre.setName(banco.getBanco_id() + "");
                    lblBancoNombre.setText(banco.getNombre_Banco());
                }
                Cuenta cuenta = new Cuenta();
                Object ooo[][] = control.seekUniversal(cuenta.getVectorData(), "Cuenta", "'" + cheque.getCuentaID() + "'");
                if (ooo != null) {
                    cuenta = new Cuenta(ooo);
                    lblCuentaID.setText(cuenta.getCuentaID());
                    lblCuentaNombre.setText(cuenta.getNombre());
                }
                c = true;
                jButton3.grabFocus();
            }
        }
    }//GEN-LAST:event_txtChequeIDActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        boolean a=false, bb=false;
        for(JTextField o:txtCampos){
            if(o.getText().isEmpty()){
                JOptionPane.showMessageDialog(rootPane,"Campo "+o.getName()+" se encuentra Vacio","Error",JOptionPane.ERROR_MESSAGE);
                o.grabFocus();
                a=false;
                break;
            }
            else{
                a=true;
            }
        }
        Date d=cboFecha.getDate();
        Calendar c2 = new GregorianCalendar();
        c2.setTime(d);
        if (a) {
            if (!b) {
                JOptionPane.showMessageDialog(rootPane, "Campo Socio ID no esta Validado", "Error", JOptionPane.ERROR_MESSAGE);
                bb = false;
                txtSocioID.grabFocus();
            }
            else if (!c) {
                JOptionPane.showMessageDialog(rootPane, "Campo Cheque ID no esta Validado", "Error", JOptionPane.ERROR_MESSAGE);
                bb = false;
                txtChequeID.grabFocus();
            }
            else if(inter.String_Float(txtValor.getText())>limite){
                JOptionPane.showMessageDialog(rootPane,"Prestamo mayor de lo permitido","Error",JOptionPane.ERROR_MESSAGE);
                txtValor.grabFocus();
                bb=false;
            }
            else if(!c1.before(c2)){
                JOptionPane.showMessageDialog(rootPane,"Prestamo Solo se otorga con una antiguedad mayor a los 30 dias","Error",JOptionPane.ERROR_MESSAGE);
                txtSocioID.grabFocus();
                bb=false;
            }
            else if (inter.String_Int(txtChequeID.getText()) != cheque.getChequeID()) {
                JOptionPane.showMessageDialog(rootPane,"No. de Cheque no concuerda con el Valor Validado","Error",JOptionPane.ERROR_MESSAGE);
                txtChequeID.grabFocus();
                bb=false;
            }
            else if(inter.String_Float(txtValor.getText())!=inter.String_Float(lblValor.getText())){
                JOptionPane.showMessageDialog(rootPane,"Valor del Prestamo No concuerda con el Valor del Cheque","Error",JOptionPane.ERROR_MESSAGE);
                txtValor.grabFocus();
                bb=false;
            }
            else {
                bb = true;
            }
            if (bb) {
                String fecha = "";
                fecha=inter.Date_String(d);
                Cooperativa coop=new Cooperativa();
                Object o[][] = control.seekUniversal(coop.getVectorData(), "Cooperativa",1+"");
                coop=new Cooperativa(o);
                int inte=(int) (coop.getInteresPrestamo()*100);
                prestamo=new Prestamo(inter.String_Int(txtPrestamoID.getText()),inter.String_Int(txtSocioID.getText()), fecha,inter.String_Float(txtValor.getText()),coop.getPlazoPrestamos(),inte,2,inter.String_Int(lblBancoNombre.getName()),lblCuentaID.getText(),inter.String_Int(txtChequeID.getText()));
                
                Calendar c4 = new GregorianCalendar();
                c4.setTime(d);
                c4.add(Calendar.DAY_OF_MONTH, 30);
                Vector<Cuota> Cuotota=new Vector<>();
                fecha=inter.Date_String(c4.getTime());
                int auto = control.autoUniversal2("Cuota","CuotaID");
                double i=0.0,num=0.0,dem=0.0,cap=0.0,cuo=0.0;
                double sc=coop.getInteresPrestamo(), valor=prestamo.getValor();
                
                if (rd1.isSelected()) {
                    i=sc/12;
                    num = (i * (Math.pow((1 + i), 12)));
                    dem = ((Math.pow((1 + i), 12)) - 1);
                    cuo = valor * (num / dem);
                    cap = valor;

                    for (int z = 0; z < 12; z++) {
                        float interes = (float) (cap * i);
                        float capi = (float) (cuo - interes);
                        Cuota cuota = new Cuota(prestamo.getPrestamoID(), auto, fecha, fecha, capi, interes, 0,"P");
                        Cuotota.add(cuota);
                        cap = cap - capi;
                        auto++;
                        c4.add(Calendar.DAY_OF_MONTH, 30);
                        fecha = inter.Date_String(c4.getTime());
                    }
                }else{
                    i=coop.getInteresPrestamo();
                    cap = valor;
                    cuo =valor/12;
                    
                    for (int z = 0; z < 12; z++) {
                        float interes = (float) (cap * i*30)/360;
                        float capi = (float) cuo;
                        Cuota cuota = new Cuota(prestamo.getPrestamoID(), auto, fecha, fecha, capi, interes, 0,"P");
                        Cuotota.add(cuota);
                        cap -= capi;
                        auto++;
                        c4.add(Calendar.DAY_OF_MONTH, 30);
                        fecha = inter.Date_String(c4.getTime());
                    }
                }
                
                
                //Guarda
                boolean y=control.insUniversal2(prestamo.getVectorData(), "Prestamo");
                boolean x=false;
                for(Cuota oo:Cuotota){
                    x=control.insUniversal2(oo.getVectorData(), "Cuota");
                    if(!x){
                        break;
                    }
                }
                cheque.setEstado("P");
                boolean z=control.updUniversal2(cheque.getVectorData(),"Cheque",cheque.getChequeID()+"");
                if((y) && (x) && (z)){
                    JOptionPane.showMessageDialog(rootPane, "PRESTAMO GRABADO CON EXITO");
                }
                Limpiar_Campos();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser cboFecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblBancoNombre;
    private javax.swing.JLabel lblCuentaID;
    private javax.swing.JLabel lblCuentaNombre;
    private javax.swing.JLabel lblNombreBeneficiario;
    private javax.swing.JLabel lblNombreSocio;
    private javax.swing.JLabel lblValor;
    private javax.swing.JRadioButton rd1;
    private javax.swing.JRadioButton rd2;
    private javax.swing.JTextField txtChequeID;
    private javax.swing.JTextField txtPrestamoID;
    private javax.swing.JTextField txtSocioID;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
